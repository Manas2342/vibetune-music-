const t=new class{STORAGE_KEY="vibetune_recently_played";MAX_ITEMS=50;addTrack(t){try{const e=this.getRecentlyPlayed().filter(e=>e.id!==t.id),a=[{id:t.id,title:t.title,artist:t.artist,image:t.albumArt||"/placeholder.svg",playedAt:new Date,duration:t.duration,spotifyId:t.spotifyId},...e].slice(0,this.MAX_ITEMS);localStorage.setItem(this.STORAGE_KEY,JSON.stringify(a))}catch(e){}}getRecentlyPlayed(t=20){try{const e=localStorage.getItem(this.STORAGE_KEY);if(!e)return[];const a=JSON.parse(e);return a.map(t=>({...t,playedAt:new Date(t.playedAt)})).slice(0,t)}catch(e){return[]}}removeTrack(t){try{const e=localStorage.getItem(this.STORAGE_KEY);if(!e)return;const a=JSON.parse(e).filter(e=>e.id!==t);localStorage.setItem(this.STORAGE_KEY,JSON.stringify(a))}catch(e){}}clearRecentlyPlayed(){try{localStorage.removeItem(this.STORAGE_KEY)}catch(t){}}getCount(){return this.getRecentlyPlayed().length}wasPlayedRecently(t,e=60){const a=this.getRecentlyPlayed().find(e=>e.id===t);if(!a)return!1;return Date.now()-a.playedAt.getTime()<60*e*1e3}};export{t as default,t as recentlyPlayedService};
