version: '3.8'

services:
  vibetune:
    build: .
    ports:
      - "8084:8084"
    environment:
      - NODE_ENV=production
      - PORT=8084
      - HOST=0.0.0.0
      # Database
      - DATABASE_URL=sqlite:/app/data/vibetune.db
      # Spotify API
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID:-c988ff755c9d4e2594da9e1440a890ea}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET:-4b3328d89b494cebaa60ad77af98dd30}
      - SPOTIFY_REDIRECT_URI=${SPOTIFY_REDIRECT_URI:-http://localhost:8084/callback}
      # YouTube API
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      # AWS Configuration
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET:-vibetune-music-cache}
      # App Configuration
      - JWT_SECRET=${JWT_SECRET:-080aeeeaffcf1d919df762a0dd043d72018dda65f20436243e38fb50d3e8acba}
      - SESSION_SECRET=${SESSION_SECRET:-b6999f8e126db10534ffc2f83dc846d2037be98ffabb88912ebc96bd287e31d0}
      # Music Configuration
      - ENABLE_YOUTUBE_FALLBACK=true
      - ENABLE_SPOTIFY_PREMIUM=true
      - AUDIO_QUALITY=high
      - MAX_CACHE_SIZE_GB=10
      - OFFLINE_MUSIC_PATH=/app/storage/offline
    volumes:
      - vibetune_data:/app/data
      - vibetune_storage:/app/storage
      - vibetune_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/api/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching (optional but recommended for production)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - vibetune_redis:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx reverse proxy (optional for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - vibetune_logs:/var/log/nginx
    depends_on:
      - vibetune
    restart: unless-stopped

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - vibetune_prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped

  # Grafana for monitoring dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-vibetune123}
    volumes:
      - vibetune_grafana:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  vibetune_data:
    driver: local
  vibetune_storage:
    driver: local
  vibetune_logs:
    driver: local
  vibetune_redis:
    driver: local
  vibetune_prometheus:
    driver: local
  vibetune_grafana:
    driver: local

networks:
  default:
    name: vibetune-network